// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

// @ts-ignore
import { __SPACETIMEDB__, AlgebraicType, ProductType, BuiltinType, ProductTypeElement, SumType, SumTypeVariant, DatabaseTable, AlgebraicValue, ReducerEvent, Identity, Address, ClientDB, SpacetimeDBClient } from "@clockworklabs/spacetimedb-sdk";
// @ts-ignore
import { ElementStruct } from "./element_struct";

export class ElementChange extends DatabaseTable
{
	public static db: ClientDB = __SPACETIMEDB__.clientDB;
	public static tableName = "ElementChange";
	public id: number;
	public element: ElementStruct;
	public transparency: number;
	public transform: string;
	public clip: string;
	public placedBy: string;
	public lastEditedBy: string;
	public zIndex: number;

	public static primaryKey: string | undefined = undefined;

	constructor(id: number, element: ElementStruct, transparency: number, transform: string, clip: string, placedBy: string, lastEditedBy: string, zIndex: number) {
	super();
		this.id = id;
		this.element = element;
		this.transparency = transparency;
		this.transform = transform;
		this.clip = clip;
		this.placedBy = placedBy;
		this.lastEditedBy = lastEditedBy;
		this.zIndex = zIndex;
	}

	public static serialize(value: ElementChange): object {
		return [
		value.id, ElementStruct.serialize(value.element), value.transparency, value.transform, value.clip, value.placedBy, value.lastEditedBy, value.zIndex
		];
	}

	public static getAlgebraicType(): AlgebraicType
	{
		return AlgebraicType.createProductType([
			new ProductTypeElement("id", AlgebraicType.createPrimitiveType(BuiltinType.Type.U32)),
			new ProductTypeElement("element", ElementStruct.getAlgebraicType()),
			new ProductTypeElement("transparency", AlgebraicType.createPrimitiveType(BuiltinType.Type.I32)),
			new ProductTypeElement("transform", AlgebraicType.createPrimitiveType(BuiltinType.Type.String)),
			new ProductTypeElement("clip", AlgebraicType.createPrimitiveType(BuiltinType.Type.String)),
			new ProductTypeElement("placedBy", AlgebraicType.createPrimitiveType(BuiltinType.Type.String)),
			new ProductTypeElement("lastEditedBy", AlgebraicType.createPrimitiveType(BuiltinType.Type.String)),
			new ProductTypeElement("zIndex", AlgebraicType.createPrimitiveType(BuiltinType.Type.I32)),
		]);
	}

	public static fromValue(value: AlgebraicValue): ElementChange
	{
		let productValue = value.asProductValue();
		let __Id = productValue.elements[0].asNumber();
		let __Element = ElementStruct.fromValue(productValue.elements[1]);
		let __Transparency = productValue.elements[2].asNumber();
		let __Transform = productValue.elements[3].asString();
		let __Clip = productValue.elements[4].asString();
		let __PlacedBy = productValue.elements[5].asString();
		let __LastEditedBy = productValue.elements[6].asString();
		let __ZIndex = productValue.elements[7].asNumber();
		return new this(__Id, __Element, __Transparency, __Transform, __Clip, __PlacedBy, __LastEditedBy, __ZIndex);
	}

}

export default ElementChange;
